$primary: #a9a9a9;

h2 {
	color: $primary;
}
._errorMessage{
  color : red;
}
.infoBlockHeader{
  color: green;
}
.displayHide {
	display: none;
}

/*custom font*/
@import url(http://fonts.googleapis.com/css?family=Merriweather+Sans);
@import url(http://fonts.googleapis.com/css?family=Montserrat);

* {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

html, body {
  min-height: 100%;
  display: -webkit-flex;
  display: flex;
  flex-direction: column;
}

body {
  //text-align: center;
  //font-family: 'Merriweather Sans', arial, verdana;
  margin: 0;
}
.header{
  position: fixed;
  width: 100%;
  box-shadow: 2px 0 5px 0 rgba(0,0,0,.1);
  z-index: 2;
}
.header-h1{
  min-height: 0;
  border: none;
  margin: 0 auto;
  padding: 15px;

  width: 48%;
  min-width: 600px;
  padding-left: 1rem;
  padding-right: 1rem;
}
.top-level{
  width: 100%;
  min-height: 640px;
  min-height: 100vh;
  background-color: #fff;
  font-family: Montserrat, Arial;
  text-rendering: optimizeLegibility;
  color: #4b4a4a;
  font-weight: 400;
  overflow-y: hidden;
}
.main{
  padding-top: 84px;
  height: 637px;
  width: 48%;
  min-width: 600px;
  padding-left: 1rem;
  padding-right: 1rem;
  margin: 0 auto;
}
.contentTitle {
  font: 20px 'calibriregular';
  padding-top: 15px;
  padding-bottom: 36px;
}
.content{
  padding: 2rem;
  margin-bottom: 1rem;
  border: 1px solid #ddd;
}

input:not([type=submit]){
  padding-left: 1rem;
  height: 2.5rem;
  margin: 0;
  outline: none;
  border: none;
  box-shadow: none;
  background-color: #F0F0F0;
  -webkit-appearance: none;
  -moz-appearance: none;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;

}

input[type=submit]{
  width: 150px;
  height: 50px;
  border: none;
  color: white;
  background: #9eeb62;
  font-weight: bold;
  font-size: 18px;
}

.submitButton{
  position: relative;
  float: right;
}
.flex-row{
  display: flex;
}
.row {
  position: relative;

  &:after, &:before{
    display: table;
    content: " ";
  }
 &:after{
   clear:both;
 }
}
.flex-half-row{
  flex-grow: 2;
}
.half-row{
  width: 47%;
  position: relative;

  input {
    width: 100%;
  }
  &:last-child {
    float: right;
  }

}
.half-row-tr{
  width: 29%;
  position: relative;
}

.inline{
  display: inline-block;
  vertical-align: top;

}



.breadcrumb {
  text-align: center;
  /*centering*/
  display: inline-block;
  box-shadow: 0 0 15px 1px rgba(0, 0, 0, 0.35);
  overflow: hidden;
  border-radius: 5px;
  /*Lets add the numbers for each link using CSS counters. flag is the name of the counter. to be defined using counter-reset in the parent element of the links*/
  counter-reset: flag;
  margin-bottom: 50px;
}

.breadcrumb a {
  text-decoration: none;
  outline: none;
  display: block;
  float: left;
  font-size: 12px;
  line-height: 36px;
  color: white;
  /*need more margin on the left of links to accomodate the numbers*/
  padding: 0 10px 0 60px;
  background: #666;
  background: linear-gradient(#666, #333);
  position: relative;

}
/*since the first link does not have a triangle before it we can reduce the left padding to make it look consistent with other links*/
.breadcrumb a:first-child {
  padding-left: 46px;
  border-radius: 5px 0 0 5px; /*to match with the parent's radius*/
}
.breadcrumb a:first-child:before {
  left: 14px;
}
.breadcrumb a:last-child {
  border-radius: 0 5px 5px 0; /*this was to prevent glitches on hover*/
  padding-right: 20px;
}

/*hover/active styles*/
.breadcrumb a.active, .breadcrumb a:hover{
  background: #333;
  background: linear-gradient(#333, #000);
}
.breadcrumb a.active:after, .breadcrumb a:hover:after {
  background: #333;
  background: linear-gradient(135deg, #333, #000);
}

/*adding the arrows for the breadcrumbs using rotated pseudo elements*/
.breadcrumb a:after {
  content: '';
  position: absolute;
  top: 0;
  right: -18px; /*half of square's length*/
  /*same dimension as the line-height of .breadcrumb a */
  width: 36px;
  height: 36px;
  /*as you see the rotated square takes a larger height. which makes it tough to position it properly. So we are going to scale it down so that the diagonals become equal to the line-height of the link. We scale it to 70.7% because if square's:
  length = 1; diagonal = (1^2 + 1^2)^0.5 = 1.414 (pythagoras theorem)
  if diagonal required = 1; length = 1/1.414 = 0.707*/
  transform: scale(0.707) rotate(45deg);
  /*we need to prevent the arrows from getting buried under the next link*/
  z-index: 1;
  /*background same as links but the gradient will be rotated to compensate with the transform applied*/
  background: #666;
  background: linear-gradient(135deg, #666, #333);
  /*stylish arrow design using box shadow*/
  box-shadow:
          2px -2px 0 2px rgba(0, 0, 0, 0.4),
          3px -3px 0 2px rgba(255, 255, 255, 0.1);
  /*
      5px - for rounded arrows and
      50px - to prevent hover glitches on the border created using shadows*/
  border-radius: 0 5px 0 50px;
}
/*we dont need an arrow after the last link*/
.breadcrumb a:last-child:after {
  content: none;
}
/*we will use the :before element to show numbers*/
.breadcrumb a:before {
  content: counter(flag);
  counter-increment: flag;
  /*some styles now*/
  border-radius: 100%;
  width: 20px;
  height: 20px;
  line-height: 20px;
  margin: 8px 0;
  position: absolute;
  top: 0;
  left: 30px;
  background: #444;
  background: linear-gradient(#444, #222);
  font-weight: bold;
}
.flat a, .flat a:after {
  background: white;
  color: black;
  transition: all 0.5s;
}
.flat a:before {
  background: white;
  box-shadow: 0 0 0 1px #ccc;
}
.flat a:hover, .flat a.active,
.flat a:hover:after, .flat a.active:after{
  background: #9EEB62;
}
.breadcrumb a:last-child:hover {
  background: #FFFFFF;
}